#################################################
#undertow运行容器配置(性能>Tomcat)
#################################################
server:
  port: 9999
  undertow:
    #【I/O线程数】CPU 数量;它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心为一个线程.不要设置过大，如果过大，启动项目会报错：打开文件数过多
    io-threads: 2
    #【工作线程数】：CPU 数量*8;阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程.它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    worker-threads: 16
    #【是否堆之外分配缓冲区】是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    # 【每个缓冲区的大小（以字节为单位）】配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理；每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 512
    #【Http最大请求数量】
    max-http-post-size: 5000
#################################################
# 注册服务中心安全配置
#################################################
security:
  user:
    name: bu-admin
    password: 123456
  basic:
    enabled: true
#################################################
# 注册服务中心配置
#################################################
eureka:
  instance:
    hostname: ${spring.application.name}
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
    # lease-expiration-duration-in-seconds > lease-renewal-interval-in-seconds
    lease-expiration-duration-in-seconds: 60
    # ureka client发送心跳给server端的频率
    # lease-renewal-interval-in-seconds < lease-expiration-duration-in-seconds
    lease-renewal-interval-in-seconds: 10
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    #自我保护
    enable-self-preservation: true
    #清理间隔-单位毫秒
    eviction-interval-timer-in-ms: 30000
